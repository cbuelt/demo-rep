points(X_test,krr_predict,col="red")
#plot(results,type="l")
ggplot(data=result_df,aes(x=lambda,y=mean_mse))+geom_line()
plot(X_test,y_test)
points(X_test,krr_predict,col="red")
plot(X_train,y_train)
plot(X_train,y_train)
points(X_test,y_test)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/simulation_v1.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/simulation_v1.R', echo=TRUE)
results
#plot(results,type="l")
ggplot(data=result_df,aes(x=lambda,y=mean_mse,color=supp))+geom_line()
#plot(results,type="l")
ggplot(data=result_df,aes(x=lambda,y=mean_mse,color="supp"))+geom_line()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/simulation_v1.R', echo=TRUE)
#plot(results,type="l")
ggplot(data=result_df,aes(x=lambda,y=mean_mse,color="supp"))+geom_line()
#plot(results,type="l")
ggplot(data=result_df,aes(x=lambda,y=mean_mse,color="supp"))+geom_line()+
geom_errorbar(aes(ymin=mean_mse-sd_mse, ymax=mean_mse+sd_mse), width=.2,position=position_dodge(0.05))
#plot(results,type="l")
ggplot(data=result_df,aes(x=lambda,y=mean_mse,color="supp"))+geom_line()+geom_point()
#plot(results,type="l")
ggplot(data=result_df,aes(x=lambda,y=mean_mse,color="supp"))+geom_line()+geom_point()+
geom_errorbar(aes(ymin=mean_mse-sd_mse, ymax=mean_mse+sd_mse), width=.2,position=position_dodge(0.05))
results
ggplot(data=result_df,aes(x=lambda,y=mean_mse,color="supp"))+geom_line()+geom_point()+
geom_errorbar(aes(ymin=mean_mse-sd_mse, ymax=mean_mse+sd_mse), width=.2,position=position_dodge(0.05))
plot(X_test,y_test)
points(X_test,krr_predict,col="red")
plot(X_train,y_train)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/simulation_v1.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/simulation_v1.R', echo=TRUE)
#Data parameters
p<-1
n<-250
#Generate data
X_sample <- replicate(p,runif(n,-15,15))
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x)
#Plot
plot(X_sample,y_sample)
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x+rnorm(1,0,1))
#Plot
plot(X_sample,y_sample)
#Create kernel function
rbf <- rbfdot(sigma = 0.5)
n<-2500
#Generate data
X_sample <- replicate(p,runif(n,-15,15))
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x+rnorm(1,0,1))
#Plot
plot(X_sample,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/regression_with_enhanced_huber_loss.R', echo=TRUE)
alpha_f<-alpha[dim(alpha)[1],]
offset_f<-offset[length(offset)]
y_pred<- K%*%alpha_f+offset_f
plot(X_sample,y_sample,col="red")
points(X_sample,y_pred,col="green")
MSE(y_pred,y_sample)
energy
#Data parameters
p<-1
n<-250
#Generate data
X_sample <- replicate(p,runif(n,-15,15))
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x+rnorm(1,0,1))
#Plot
plot(X_sample,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/regression_with_enhanced_huber_loss.R', echo=TRUE)
energy
res
n<-25000
#Generate data
X_sample <- replicate(p,runif(n,-15,15))
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x+rnorm(1,0,1))
#Plot
plot(X_sample,y_sample)
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x+rnorm(1,0,0.1))
#Plot
plot(X_sample,y_sample)
#Data parameters
p<-1
n<-250
#Generate data
X_sample <- replicate(p,runif(n,-15,15))
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x+rnorm(1,0,0.1))
#Plot
plot(X_sample,y_sample)
y_sample <- apply(X = X_sample, MARGIN = 1, FUN = function(x) sin(x)/x+rnorm(1,0,10))
#Plot
plot(X_sample,y_sample)
#Create kernel function
rbf <- rbfdot(sigma = 0.5)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/regression_with_enhanced_huber_loss.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Simulation/simulation_v1.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
install.packages("mlbench")
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
install.packages("e1071")
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
gbmFit1
data(Sonar)
str(Sonar[, 1:10])
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(Sonar)
#Generate data for testing
X_sample<-repeat(2,runif(100,0,1))
#Generate data for testing
X_sample<-replicate(2,runif(100,0,1))
View(X_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(X_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
plot(X_sample[1,],y_sample)
X_sample[1,]
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
X_sample
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
#Custom KRR
K<-kernelMatrix(X_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
dim(K)
a<-(K+lambda*diag(dim(K)[1]))
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
a
a<-solve(K+lambda*diag(dim(K)[1]))%*%y_sample
a
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
prm <- data.frame(parameter = c("C", "sigma"),
class = rep("numeric", 2),
label = c("Cost", "Sigma"))
parameters<-data.frame(parameter=c(sigma,lambda),
class=rep("numeric",2),
label=c("Regularization","Sigma"))
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
krrGrid()
krrGrid
krrGrid(X_sample,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
krrGrid()
install.packages("grnn")
dat <- data.frame(y_sample, X_sample)
s <- smooth(learn(dat), sigma=param$sigma)
dat <- data.frame(y_sample, X_sample)
s <- smooth(learn(dat), sigma=0.5)
library(grnn)
dat <- data.frame(y_sample, X_sample)
s <- smooth(learn(dat), sigma=0.5)
s
View(s)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
list("K"=1,"a"=2)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
#Try
dat<-data.frame(y_sample,X_sample)
dat
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
#Prob
krrProb<-NULL
#Add prob to list
modelkrr$prob <- krrProb
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
xlst
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
pred <- foreach(i = xlst, .combine = rbind) %do% {
#grnn() can only compute a prediction for one sample at a time
newdata[i,]+1 #provide x values as matrix
}
xlst
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
pred
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
pred <- foreach(i = xlst, .combine = rbind) %do% {
#grnn() can only compute a prediction for one sample at a time
xlst+1 #provide x values as matrix
}
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
pred <- foreach(i = xlst, .combine = rbind) %do% {
#grnn() can only compute a prediction for one sample at a time
i+1 #provide x values as matrix
}
pred
X_sample
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(KRR)
#Predict
predict(KRR,y_sample)
#Predict
predict(KRR,X_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
X_sample
dat
#Predict
predict(KRR,data.frame(X_sample))
plot(X_sample,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
points(X_sample,pred)
MSE(pred,y_sample)
mse(pred,y_sample)
library(MLmetrics)
mse(pred,y_sample)
MSE(pred,y_sample)
plot(X_sample,y_sample)
points(X_sample,pred,col="red")
MSE(pred,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr)
#Predict
pred<-predict(KRR,data.frame(X_sample))
plot(X_sample,y_sample)
points(X_sample,pred,col="red")
MSE(pred,y_sample)
KRR
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
fitControl <- trainControl(method="repeatedcv", number=5,repeats=5)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr,
trControl=fitControl)
KRR
fitControl <- trainControl(method="repeatedcv", number=10,repeats=2)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr,
trControl=fitControl)
KRR
fitControl <- trainControl(method="repeatedcv", number=10,repeats=10)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr,
trControl=fitControl)
KRR
out<-data.frame(sigma=seq(0.5,1,.05),
lambda=seq(0.5,1,.05))
combn(out)
out[,1]
expand.grid(out[,1],out[,2])
expand.grid("sigma"=out[,1],"lambda"=out[,2])
out<-data.frame(sigma=seq(0.5,1,.05),
lambda=seq(0.5,1,.05))
out
sigma=seq(0.5,1,.05)
lambda=seq(0.5,1,.05)
expand.grid("sigma"=sigma,"lambda"=lambda)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
sigma=seq(0.5,1,.05)
lambda=seq(0.5,1,.05)
expand.grid("sigma"=sigma,"lambda"=lambda)
sigma=seq(0.1,1.5,.1)
sigma
sigma=seq(0.1,1.5,.1)
lambda=seq(0,2,.1)
expand.grid("sigma"=sigma,"lambda"=lambda)
length(sigma)
length(lambda)
sigma=seq(0.1,1.2,.1)
lambda=seq(0,2,.2)
expand.grid("sigma"=sigma,"lambda"=lambda)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
sigma=seq(0.01,1.2,.1)
lambda=seq(0,2,.2)
grid<-expand.grid("sigma"=sigma,"lambda"=lambda)
length(grid)
dim(grid)
sigma=seq(0.01,1.2,.05)
lambda=seq(0,2,.2)
grid<-expand.grid("sigma"=sigma,"lambda"=lambda)
dim(grid)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
len=5
rng <- extendrange(log(sigmas), f = .75)
out <- data.frame(sigma = exp(runif(len, min = rng[1], max = rng[2])),
C = 2^runif(len, min = -5, max = 8))
test<-rbfdot(sigma=-1)
test(1,1)
test(1,5)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
sigma<-seq(0.01,1,.1)
lambda<-seq(0,2,.2)
grid<-expand.grid("sigma"=sigma,"lambda"=lambda)
dim(grid)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
summary(KRR)
View(KRR)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
library(caret)
library(mlbench)
library(mvtnorm)
library(kernlab)
library(MASS)
library(MLmetrics)
test<-matrix(0,5,5)
View(test)
solve(test)
ginv(test)
lambda_seq <-seq(from=0, to=5, by=0.5)
length(lambda_deq)
length(lambda_seq)
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("shinydashboard")
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp()
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp()
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp()
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("caret")
install.packages("caret")
install.packages("caret")
#Load packages
library(caret)
library(mlbench)
library(mvtnorm)
library(kernlab)
library(MASS)
library(MLmetrics)
library(Matrix)
library(plyr)
library(progress)
library(readxl)
devtools::document()
install.packages("devtools")
devtools::document()
roxygen2::roxygenise()
roxygen2::roxygenize()
#Source functions
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
roxygen2::roxygenize()
