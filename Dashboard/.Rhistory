source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
dim(K)
a<-(K+lambda*diag(dim(K)[1]))
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
a
a<-solve(K+lambda*diag(dim(K)[1]))%*%y_sample
a
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
prm <- data.frame(parameter = c("C", "sigma"),
class = rep("numeric", 2),
label = c("Cost", "Sigma"))
parameters<-data.frame(parameter=c(sigma,lambda),
class=rep("numeric",2),
label=c("Regularization","Sigma"))
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
krrGrid()
krrGrid
krrGrid(X_sample,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
krrGrid()
install.packages("grnn")
dat <- data.frame(y_sample, X_sample)
s <- smooth(learn(dat), sigma=param$sigma)
dat <- data.frame(y_sample, X_sample)
s <- smooth(learn(dat), sigma=0.5)
library(grnn)
dat <- data.frame(y_sample, X_sample)
s <- smooth(learn(dat), sigma=0.5)
s
View(s)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
list("K"=1,"a"=2)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
#Try
dat<-data.frame(y_sample,X_sample)
dat
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
#Prob
krrProb<-NULL
#Add prob to list
modelkrr$prob <- krrProb
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(modelkrr)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
xlst
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
pred <- foreach(i = xlst, .combine = rbind) %do% {
#grnn() can only compute a prediction for one sample at a time
newdata[i,]+1 #provide x values as matrix
}
xlst
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
pred
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
pred <- foreach(i = xlst, .combine = rbind) %do% {
#grnn() can only compute a prediction for one sample at a time
xlst+1 #provide x values as matrix
}
library(foreach)
newdata<-X_sample
xlst <- split(newdata, 1:nrow(newdata))
pred <- foreach(i = xlst, .combine = rbind) %do% {
#grnn() can only compute a prediction for one sample at a time
i+1 #provide x values as matrix
}
pred
X_sample
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
warnings()
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
View(KRR)
#Predict
predict(KRR,y_sample)
#Predict
predict(KRR,X_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
X_sample
dat
#Predict
predict(KRR,data.frame(X_sample))
plot(X_sample,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
points(X_sample,pred)
MSE(pred,y_sample)
mse(pred,y_sample)
library(MLmetrics)
mse(pred,y_sample)
MSE(pred,y_sample)
plot(X_sample,y_sample)
points(X_sample,pred,col="red")
MSE(pred,y_sample)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr)
#Predict
pred<-predict(KRR,data.frame(X_sample))
plot(X_sample,y_sample)
points(X_sample,pred,col="red")
MSE(pred,y_sample)
KRR
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
fitControl <- trainControl(method="repeatedcv", number=5,repeats=5)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr,
trControl=fitControl)
KRR
fitControl <- trainControl(method="repeatedcv", number=10,repeats=2)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr,
trControl=fitControl)
KRR
fitControl <- trainControl(method="repeatedcv", number=10,repeats=10)
KRR <- train(y_sample ~ .,data=dat,
method=modelkrr,
trControl=fitControl)
KRR
out<-data.frame(sigma=seq(0.5,1,.05),
lambda=seq(0.5,1,.05))
combn(out)
out[,1]
expand.grid(out[,1],out[,2])
expand.grid("sigma"=out[,1],"lambda"=out[,2])
out<-data.frame(sigma=seq(0.5,1,.05),
lambda=seq(0.5,1,.05))
out
sigma=seq(0.5,1,.05)
lambda=seq(0.5,1,.05)
expand.grid("sigma"=sigma,"lambda"=lambda)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
sigma=seq(0.5,1,.05)
lambda=seq(0.5,1,.05)
expand.grid("sigma"=sigma,"lambda"=lambda)
sigma=seq(0.1,1.5,.1)
sigma
sigma=seq(0.1,1.5,.1)
lambda=seq(0,2,.1)
expand.grid("sigma"=sigma,"lambda"=lambda)
length(sigma)
length(lambda)
sigma=seq(0.1,1.2,.1)
lambda=seq(0,2,.2)
expand.grid("sigma"=sigma,"lambda"=lambda)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
sigma=seq(0.01,1.2,.1)
lambda=seq(0,2,.2)
grid<-expand.grid("sigma"=sigma,"lambda"=lambda)
length(grid)
dim(grid)
sigma=seq(0.01,1.2,.05)
lambda=seq(0,2,.2)
grid<-expand.grid("sigma"=sigma,"lambda"=lambda)
dim(grid)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
len=5
rng <- extendrange(log(sigmas), f = .75)
out <- data.frame(sigma = exp(runif(len, min = rng[1], max = rng[2])),
C = 2^runif(len, min = -5, max = 8))
test<-rbfdot(sigma=-1)
test(1,1)
test(1,5)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
sigma<-seq(0.01,1,.1)
lambda<-seq(0,2,.2)
grid<-expand.grid("sigma"=sigma,"lambda"=lambda)
dim(grid)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
summary(KRR)
View(KRR)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
source('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Test/caret_test.R', echo=TRUE)
KRR
library(caret)
library(mlbench)
library(mvtnorm)
library(kernlab)
library(MASS)
library(MLmetrics)
test<-matrix(0,5,5)
View(test)
solve(test)
ginv(test)
lambda_seq <-seq(from=0, to=5, by=0.5)
length(lambda_deq)
length(lambda_seq)
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("shinydashboard")
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp()
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp()
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp()
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
library(shiny)
library(readxl)
library(ggplot2)
library(dplyr)
library(plotly)
library(rgl)
library(hrbrthemes)
library(viridis)
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
library(tidyr)
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
print("Summary")
print(summary(res))
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
shiny::runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
runApp('C:/Users/Chris/Desktop/Bachelorarbeit/Code/Dashboard/Demonstrator')
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)
library(rgl)
library(hrbrthemes)
library(orca)
library(processx)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
data<-read_excel("../data/simulation_results.xlsx")
data
summary(data)
data
#Boxplot
ggplot(test2, aes(x=Var, y=Val)) + geom_boxplot()
test2 <- filter(data,gamma == 0.25) %>%
select(`KRR-Mean`, `Huber-Mean`,`RKR-Mean`,`KGARD-Mean`) %>%
pivot_longer(., cols = c(`KRR-Mean`, `Huber-Mean`,`RKR-Mean`,`KGARD-Mean`),
names_to = "Var", values_to = "Val")
fig <- plot_ly(test2, y =~Val , type = "box", color=~Var,
boxpoints="suspectedoutliers",colors="RdBu")
fig <- fig %>% layout(yaxis = list(title="MSE",titlefont=list(size=18),tickfont=list(size=15)),
xaxis = list(tickfont=list(size=18)),showlegend=FALSE)
fig
#SD boxplot
test3 <- filter(data) %>%
select(`KRR-SD`, `Huber-SD`,`RKR-SD`,`KGARD-SD`) %>%
pivot_longer(., cols = c(`KRR-SD`, `Huber-SD`,`RKR-SD`,`KGARD-SD`),
names_to = "Var", values_to = "Val")
#Boxplot
ggplot(test3, aes(x=Var, y=Val)) + geom_boxplot()
fig <- plot_ly(test3, y =~Val , type = "box", color=~Var,
boxpoints="suspectedoutliers",colors="RdBu")
fig <- fig %>% layout(yaxis = list(title="MSE",titlefont=list(size=18),tickfont=list(size=15)),
xaxis = list(tickfont=list(size=18)),showlegend=FALSE)
fig
test2 <- data %>% rename(`KRR` = `KRR-Mean`,
Huber = `Huber-Mean`,
RKR = `RKR-Mean`,
KGARD = `KGARD-Mean`
) %>%
filter(gamma == 0.25) %>%
select(`KRR-Mean`, `Huber-Mean`,`RKR-Mean`,`KGARD-Mean`) %>%
pivot_longer(., cols = c(`KRR-Mean`, `Huber-Mean`,`RKR-Mean`,`KGARD-Mean`),
names_to = "Var", values_to = "Val")
data
test2 <- data %>% rename(`KRR` = `KRR-Mean`,
Huber = `Huber-Mean`,
RKR = `RKR-Mean`,
KGARD = `KGARD-Mean`
)# %>%
test2 <- data %>% rename(`KRR` = `KRR-Mean`,
Huber = `Huber-Mean`,
RKR = `RKR-Mean`,
KGARD = `KGARD-Mean`
) %>%
filter(gamma == 0.25) %>%
select(`KRR`, `Huber`,`RKR`,`KGARD`) %>%
pivot_longer(., cols = c(`KRR`, `Huber`,`RKR`,`KGARD`),
names_to = "Var", values_to = "Val")
#Boxplot
ggplot(test2, aes(x=Var, y=Val)) + geom_boxplot()
fig <- plot_ly(test2, y =~Val , type = "box", color=~Var,
boxpoints="suspectedoutliers",colors="RdBu")
fig <- fig %>% layout(yaxis = list(title="MSE",titlefont=list(size=18),tickfont=list(size=15)),
xaxis = list(tickfont=list(size=18)),showlegend=FALSE)
fig
orca(fig, "boxplot_0.25.pdf")
test2 <- data %>% rename(`KRR` = `KRR-Mean`,
Huber = `Huber-Mean`,
RKR = `RKR-Mean`,
KGARD = `KGARD-Mean`
) %>%
filter(gamma == 0.1) %>%
select(`KRR`, `Huber`,`RKR`,`KGARD`) %>%
pivot_longer(., cols = c(`KRR`, `Huber`,`RKR`,`KGARD`),
names_to = "Var", values_to = "Val")
#Boxplot
ggplot(test2, aes(x=Var, y=Val)) + geom_boxplot()
fig <- plot_ly(test2, y =~Val , type = "box", color=~Var,
boxpoints="suspectedoutliers",colors="RdBu")
fig <- fig %>% layout(yaxis = list(title="MSE",titlefont=list(size=18),tickfont=list(size=15)),
xaxis = list(tickfont=list(size=18)),showlegend=FALSE)
fig
orca(fig, "boxplot_0.1.pdf")
